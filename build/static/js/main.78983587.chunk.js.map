{"version":3,"sources":["configs/env.js","utils/keys.js","configs/envs/kovan.js","utils/converters.js","utils/fortmaters.js","services/web3_service.js","rx/rx-base.js","rx/rx-account.js","services/single_modal_service.js","components/modals/modal_container.js","rx/rx-currency.js","utils/calculators.js","components/hooks/useGasAndTxFee.js","components/deposit/deposit.js","services/metamask_wallet.js","services/private_key_wallet.js","services/wallet_connect_wallet.js","components/hooks/useFetchingInitData.js","components/account/metamask_button.js","components/account/private_key_button.js","components/account/wallet_connect_button.js","App.js","reportWebVitals.js","index.js"],"names":["require","default","ABI","L2","ERC20","TOPICS","DEFAULT_GAS","APPROVE","APPROVE_MAX","DEPOSIT","STEPS","addressFromPrivateKey","privateKey","addBuf","ethUtil","Buffer","NETWORK_ID","CHAIN_NAME","URLS","ETHERSCAN","ENJINX","NODE","URL","CONNECTION_TIMEOUT","TOKENS","ETH","address","decimal","CONTRACTS","toGwei","number","BigNumber","toString","div","toWei","toBigAmount","bigNumber","times","Math","pow","toFixed","toHex","roundNumber","precision","isFormatted","amountBigNumber","amountString","indexOfDecimal","indexOf","roundedNumber","slice","displayFormattedNumber","formattedNumber","numberParts","toFormat","split","length","web3","Web3","providers","HttpProvider","ENV","l2Contract","eth","Contract","erc20Contract","getTxObject","contractAddress","methodData","value","gasPrice","gas","txObject","from","to","data","getAccountID","pubKey","console","log","Promise","resolve","reject","methods","pubKeyToAccountData","encodeABI","call","then","result","idData","abi","decodeParameters","parseInt","catch","err","fetchTokenBalance","tokenAddress","tokenContract","options","balanceOf","tokenBalance","fetchTokenAllowance","delegator","allowance","getDepositTxObject","accountID","amount","ethValue","deposit","getApproveTxObject","isApproveToMax","allowanceAmount","approveData","approve","checkTxMined","txHash","a","topic","getTransactionReceipt","receipt","status","logs","blockNumber","i","topics","toLowerCase","estimateGas","type","round","getZkKeyPair","ethSigner","window","zksync","Signer","fromETHSignature","zkSigner","privKeyBuffer","signer","privKey","ethereumjs","Array","pubKeyBuff","zksyncCrypto","private_key_to_pubkey","publicKey","zkPrivateKey","zkPublicKey","alert","store","useState","x","setX","useEffect","sub","subscribe","next","v","unsubscribe","init","localStorage","getItem","id","wallet","BehaviorSubject","useAccount","rxBase","import","setItem","clear","removeItem","Web3Service","setTxHash","content","show","modalContent","onClose","customStyles","top","left","right","bottom","marginRight","transform","modal","setModal","modalService","isOpen","ariaHideApp","style","onRequestClose","decimals","balance","useCurrency","fetchBalance","currencies","index","web3_service","formatBigNumber","compareTwoNumber","firstNumber","secondNumber","firstBigNumber","secondBigNumber","comparedTo","multiplyOfTwoNumber","multipliedBy","calculateTxFee","gasLimit","setGasPrice","setGas","txFee","setTxFee","web3Service","estimatedGasLimit","fetchGasAndTxFee","currency","rxCurrency","setAmount","account","rxAccount","flow","setFlow","tokenAllowance","component","ApproveModal","props","BroadcastModal","ConfirmModal","DoneModal","onChange","e","target","onClick","cancelFlow","StepWizard","step","setStep","M","nextStep","s","useGasAndTxFee","makeTransaction","devicePath","interval","setInterval","isMined","clearInterval","state","ethereum","givenProvider","currentProvider","connect","onEthereumError","onNetworkError","currentNetworkId","networkVersion","enable","accounts","ethers","Web3Provider","getSigner","zkKeyPair","getDisconnected","clearAccount","on","networkId","sendTransaction","message","signTransaction","signedTxObj","sendSignedTransaction","rawTx","rawTransaction","connectorSDK","WalletConnect","connector","handleClearAccount","connectWallet","metamask","metamaskWallet","privateKeyWallet","walletConnect","walletConnectWallet","connectMetamask","PrivateKeyModal","priv","setPriv","submitKey","pKey","Wallet","placeholder","error","App","useFetchingInitData","loadWasm","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78983587.chunk.js","sourcesContent":["export default {\n    ...require(\"./envs/kovan\").default,\n    ABI: {\n        L2: [{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_adminPubKey\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_genesisStateHash\",\"type\":\"bytes32\"},{\"internalType\":\"contract IERC20\",\"name\":\"_feeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minFeeTokenDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"accountID\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"tokenID\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CompleteExit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"withdrawID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"tokenID\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CompleteWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minDepositAmount\",\"type\":\"uint256\"}],\"name\":\"MinDepositSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"}],\"name\":\"SubmitBlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"accountID\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"depositID\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"tokenID\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SubmitDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint48\",\"name\":\"depositID\",\"type\":\"uint48\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"pubKey\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"tokenID\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SubmitDepositToNew\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"accountID\",\"type\":\"uint32\"}],\"name\":\"SubmitExit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"zkProofHash\",\"type\":\"bytes32\"}],\"name\":\"SubmitZkProof\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"}],\"name\":\"TokenEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"tokenID\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minDepositAmount\",\"type\":\"uint256\"}],\"name\":\"TokenListed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"accountID\",\"type\":\"uint32\"},{\"internalType\":\"uint16[]\",\"name\":\"_tokenIDs\",\"type\":\"uint16[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"siblings\",\"type\":\"bytes32[]\"}],\"name\":\"completeExit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"withdrawIDs\",\"type\":\"uint256[]\"}],\"name\":\"completeWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"accountID\",\"type\":\"uint32\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"name\":\"depositHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"publicKey\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"withdrawTo\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositNewUser\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isEnabled\",\"type\":\"bool\"}],\"name\":\"enableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"exitRequests\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timeStamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isConfirmed\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"withdrawTo\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"balanceRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockDetails\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"zkProofHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGenesisStateHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"isCompleteExits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastestBlock\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"blockRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minDepositAmount\",\"type\":\"uint256\"}],\"name\":\"listToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numDeposits\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numIncludedDeposits\",\"outputs\":[{\"internalType\":\"uint48\",\"name\":\"\",\"type\":\"uint48\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numOccupiedAccounts\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numWithdraws\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"pubKeyToAccountData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isAdded\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"accountID\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minDepositAmount\",\"type\":\"uint256\"}],\"name\":\"setMinDepositAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes[]\",\"name\":\"miniBlocks\",\"type\":\"bytes[]\"},{\"internalType\":\"uint32\",\"name\":\"timeStamp\",\"type\":\"uint32\"}],\"name\":\"submitBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"accountID\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"balanceRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"submitTimeStamp\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"proofData\",\"type\":\"bytes\"}],\"name\":\"submitExit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"zkProof\",\"type\":\"uint256[]\"}],\"name\":\"submitZkProof\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenInfos\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isListed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"},{\"internalType\":\"uint16\",\"name\":\"tokenID\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"minDepositAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"depositID\",\"type\":\"uint48\"},{\"internalType\":\"bytes32\",\"name\":\"depositHash\",\"type\":\"bytes32\"}],\"name\":\"verifyDepositData\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdrawRequests\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"tokenID\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"amountMantisa\",\"type\":\"uint32\"},{\"internalType\":\"uint8\",\"name\":\"amountExp\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"destAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\n        ERC20: [{ \"constant\": true, \"inputs\": [], \"name\": \"name\", \"outputs\": [{ \"name\": \"\", \"type\": \"string\" }], \"payable\": false, \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"minter\", \"outputs\": [{ \"name\": \"\", \"type\": \"address\" }], \"payable\": false, \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_spender\", \"type\": \"address\" }, { \"name\": \"_value\", \"type\": \"uint256\" }], \"name\": \"approve\", \"outputs\": [{ \"name\": \"o_success\", \"type\": \"bool\" }], \"payable\": false, \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_recipient\", \"type\": \"address\" }, { \"name\": \"_value\", \"type\": \"uint256\" }], \"name\": \"createIlliquidToken\", \"outputs\": [{ \"name\": \"o_success\", \"type\": \"bool\" }], \"payable\": false, \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_from\", \"type\": \"address\" }, { \"name\": \"_recipient\", \"type\": \"address\" }, { \"name\": \"_amount\", \"type\": \"uint256\" }], \"name\": \"transferFrom\", \"outputs\": [{ \"name\": \"o_success\", \"type\": \"bool\" }], \"payable\": false, \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"endMintingTime\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_recipient\", \"type\": \"address\" }, { \"name\": \"_value\", \"type\": \"uint256\" }], \"name\": \"createToken\", \"outputs\": [{ \"name\": \"o_success\", \"type\": \"bool\" }], \"payable\": false, \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"name\": \"_owner\", \"type\": \"address\" }], \"name\": \"balanceOf\", \"outputs\": [{ \"name\": \"balance\", \"type\": \"uint256\" }], \"payable\": false, \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"name\": \"\", \"type\": \"address\" }], \"name\": \"illiquidBalance\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{ \"name\": \"\", \"type\": \"string\" }], \"payable\": false, \"type\": \"function\" }, { \"constant\": false, \"inputs\": [{ \"name\": \"_recipient\", \"type\": \"address\" }, { \"name\": \"_amount\", \"type\": \"uint256\" }], \"name\": \"transfer\", \"outputs\": [{ \"name\": \"o_success\", \"type\": \"bool\" }], \"payable\": false, \"type\": \"function\" }, { \"constant\": true, \"inputs\": [], \"name\": \"LOCKOUT_PERIOD\", \"outputs\": [{ \"name\": \"\", \"type\": \"uint256\" }], \"payable\": false, \"type\": \"function\" }, { \"constant\": true, \"inputs\": [{ \"name\": \"_owner\", \"type\": \"address\" }, { \"name\": \"_spender\", \"type\": \"address\" }], \"name\": \"allowance\", \"outputs\": [{ \"name\": \"o_remaining\", \"type\": \"uint256\" }], \"payable\": false, \"type\": \"function\" }, { \"constant\": false, \"inputs\": [], \"name\": \"makeLiquid\", \"outputs\": [], \"payable\": false, \"type\": \"function\" }, { \"inputs\": [{ \"name\": \"_minter\", \"type\": \"address\" }, { \"name\": \"_endMintingTime\", \"type\": \"uint256\" }], \"payable\": false, \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"name\": \"_from\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"_recipient\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"_value\", \"type\": \"uint256\" }], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"name\": \"_owner\", \"type\": \"address\" }, { \"indexed\": true, \"name\": \"_spender\", \"type\": \"address\" }, { \"indexed\": false, \"name\": \"_value\", \"type\": \"uint256\" }], \"name\": \"Approval\", \"type\": \"event\" }],\n    },\n    TOPICS: {\n\n    },\n    DEFAULT_GAS: {\n        APPROVE: 100000, \n        APPROVE_MAX: 70000,\n        DEPOSIT: 300000\n    },\n    STEPS: {\n        APPROVE: \"APPROVE\",\n        DEPOSIT: \"DEPOSIT\"\n    }  \n\n} ","import * as ethUtil from \"ethereumjs-util\";\nimport scrypt from \"scryptsy\";\nimport crypto from \"crypto\";\nimport { Transaction } from \"ethereumjs-tx\";\nimport ENV from \"src/configs/env\";\n\nfunction decipherBuffer(decipher, data) {\n  return Buffer.concat([decipher.update(data), decipher.final()]);\n}\n\nexport function addressFromKey(keystring) {\n  try {\n    const keyObj = JSON.parse(keystring);\n    const address = keyObj.address;\n\n    if (address === undefined || address === \"\") {\n      throw new Error(\"Invalid keystore format\");\n    }\n\n    return \"0x\" + address;\n  } catch (e) {\n    throw new Error(\"Invalid keystore format\");\n  }\n}\n\nexport function unlock(input, password, nonStrict) {\n  const json =\n    typeof input === \"object\" ? input : JSON.parse(nonStrict ? input.toLowerCase() : input);\n\n  if (json.version !== 3) {\n    throw new Error(\"Not a V3 wallet\");\n  }\n\n  let derivedKey, kdfparams;\n\n  if (json.crypto.kdf === \"scrypt\") {\n    kdfparams = json.crypto.kdfparams;\n    derivedKey = scrypt(\n      new Buffer(password),\n      new Buffer(kdfparams.salt, \"hex\"),\n      kdfparams.n,\n      kdfparams.r,\n      kdfparams.p,\n      kdfparams.dklen\n    );\n  } else if (json.crypto.kdf === \"pbkdf2\") {\n    kdfparams = json.crypto.kdfparams;\n    if (kdfparams.prf !== \"hmac-sha256\") {\n      throw new Error(\"Unsupported parameters to PBKDF2\");\n    }\n    derivedKey = crypto.pbkdf2Sync(\n      new Buffer(password),\n      new Buffer(kdfparams.salt, \"hex\"),\n      kdfparams.c,\n      kdfparams.dklen,\n      \"sha256\"\n    );\n  } else {\n    throw new Error(\"Unsupported key derivation scheme\");\n  }\n\n  const ciphertext = new Buffer(json.crypto.ciphertext, \"hex\");\n  const mac = ethUtil.keccak(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n\n  if (mac.toString(\"hex\") !== json.crypto.mac) {\n    throw new Error(\"Key derivation failed - possibly wrong password\");\n  }\n\n  const decipher = crypto.createDecipheriv(\n    json.crypto.cipher,\n    derivedKey.slice(0, 16),\n    new Buffer(json.crypto.cipherparams.iv, \"hex\")\n  );\n\n  let seed = decipherBuffer(decipher, ciphertext, \"hex\");\n\n  while (seed.length < 32) {\n    const nullBuff = new Buffer([0x00]);\n    seed = Buffer.concat([nullBuff, seed]);\n  }\n\n  return seed;\n}\n\nexport function getRawTxHex(txObject) {\n  const tx = new Transaction(txObject, { chain: ENV.CHAIN_NAME });\n\n  tx.raw[6] = ENV.NETWORK_ID;\n  tx.raw[7] = Buffer.from([]);\n  tx.raw[8] = Buffer.from([]);\n\n  return tx.serialize().toString(\"hex\");\n}\n\nexport function getSignedTxHex(txObject, signature, calculateV = false) {\n  let v = signature.v;\n  let r = signature.r;\n  let s = signature.s;\n\n  if (calculateV) {\n    v = `0x${reCalculateSignatureV(v)}`;\n    r = `0x${r}`;\n    s = `0x${s}`;\n  }\n\n  const signedTxObject = {\n    ...txObject,\n    v,\n    r,\n    s,\n  };\n\n  const signedTx = new Transaction(signedTxObject, { chain: ENV.CHAIN_NAME });\n\n  return `0x${signedTx.serialize().toString(\"hex\")}`;\n}\n\nfunction reCalculateSignatureV(v) {\n  const rv = parseInt(v, 16);\n  let cv = ENV.NETWORK_ID * 2 + 35;\n\n  if (rv !== cv && (rv & cv) !== rv) {\n    cv += 1;\n  }\n\n  return cv.toString(16);\n}\n\nexport function addressFromPrivateKey(privateKey) {\n  const addBuf = ethUtil.privateToAddress(new Buffer(privateKey, \"hex\"));\n  return ethUtil.bufferToHex(addBuf);\n}\n\nexport function validatePrivateKey(privateKey) {\n  return ethUtil.isValidPrivate(new Buffer(privateKey, \"hex\"));\n}\n","export default { \n    NETWORK_ID: 42,\n    CHAIN_NAME: \"kovan\",\n    URLS: {\n        ETHERSCAN: \"https://kovan.etherscan.io\",\n        ENJINX: \"https://kyber.enjinx.io\",\n    },\n    NODE: {\n        URL: \"https://kovan.infura.io/v3/aae8b1a2cb21490294c7ab5d5123d9f8\",\n        CONNECTION_TIMEOUT: 6000,\n    },\n\n    TOKENS: {\n        ETH: {\n          address: \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\n          decimal: 18,\n        }\n    },\n    CONTRACTS: {\n        L2: \"0x87DA7F1AD209c65c11ab71f3c8F0d1E745B00B1b\"\n    },\n}","import BigNumber from \"bignumber.js\";\nimport ENV from \"src/configs/env\";\n// import { WALLET_TYPES } from \"src/configs/constants\";\n// import MetamaskService from \"src/services/accounts/MetamaskService\";\n// import KeystoreService from \"src/services/accounts/KeystoreService\";\n// import WalletConnectService from \"src/services/accounts/WalletConnectService\";\n// import WalletLinkService from \"src/services/accounts/WalletLinkService\";\n// import TrezorService from \"src/services/accounts/Devices/TrezorService\";\n// import LedgerService from \"src/services/accounts/Devices/LedgerService\";\n// import DappService from \"src/services/accounts/DappService\";\n// import PrivateKeyService from \"src/services/accounts/PrivateKeyService\";\n\nexport function getNumberByPercentage(number, percentage) {\n  if (percentage === 100) return number;\n\n  const bigNumber = new BigNumber(number.toString());\n\n  return bigNumber.multipliedBy(percentage / 100).toString();\n}\n\nexport function toGwei(number) {\n  const bigNumber = new BigNumber(number.toString());\n  return bigNumber.div(1000000000).toString();\n}\n\nexport function toWei(number) {\n  return toBigAmount(number, 9);\n}\n\nexport function toBigAmount(number, decimal = 18) {\n  const bigNumber = new BigNumber(number.toString());\n  return bigNumber.times(Math.pow(10, decimal)).toFixed(0)\n}\n\nexport function toHex(number) {\n  const bigNumber = new BigNumber(number);\n  return \"0x\" + bigNumber.toString(16);\n}\n\nexport function getKeyByValue(object, value) {\n  return Object.keys(object).find((key) => object[key] === value);\n}\n\nexport function getPartnerByAddress(address) {\n  return ENV.STAKING_PARTNERS.find(\n    partner => partner.address.toLowerCase() === address.toLowerCase()\n  )\n}\n\nexport function getCurrentTimestamp() {\n  return Math.floor(Date.now() / 1000);\n}\n\nexport function fromNetworkIdToName(networkId) {\n  let networkName = 'Unknown Network';\n\n  if (networkId === 1) {\n    networkName = 'Mainnet';\n  } else if (networkId === 3) {\n    networkName = 'Ropsten Network';\n  } else if (networkId === 4) {\n    networkName = 'Rinkeby Network';\n  } else if (networkId === 5) {\n    networkName = 'Goerli Test Network';\n  } else if (networkId === 42) {\n    networkName = 'Kovan Network';\n  }\n\n  return networkName;\n}\n\n// export function getWalletByType(address, type) {\n//   let wallet = null;\n//   const props = { address };\n\n//   if (type === WALLET_TYPES.METAMASK) {\n//     wallet = new MetamaskService(props);\n//   } else if (type === WALLET_TYPES.KEYSTORE) {\n//     wallet = new KeystoreService(props);\n//   } else if (type === WALLET_TYPES.WALLET_CONNECT) {\n//     wallet = new WalletConnectService(props);\n//   } else if (type === WALLET_TYPES.WALLET_LINK) {\n//     wallet = new WalletLinkService(props);\n//   } else if (type === WALLET_TYPES.TREZOR) {\n//     wallet = new TrezorService(props);\n//   } else if (type === WALLET_TYPES.LEDGER) {\n//     wallet = new LedgerService(props);\n//   } else if (type === WALLET_TYPES.DAPP) {\n//     wallet = new DappService(props);\n//   } else if (type === WALLET_TYPES.PRIVATE_KEY) {\n//     wallet = new PrivateKeyService(props);\n//   }\n\n//   return wallet;\n// }","import BigNumber from 'bignumber.js';\n\nexport function getBiggestNumber() {\n  return '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff';\n}\n\nexport function formatAddress(address, first = 10, last = -4) {\n  return `${address.slice(0, first)}...${address.slice(last)}`;\n}\n\nexport function formatBigNumber(number, decimal = 18) {\n  if (!number) return 0;\n\n  const bigNumber = new BigNumber(number.toString());\n  const result = bigNumber.div(Math.pow(10, decimal));\n\n  return result.toString();\n}\n\nexport function roundNumber(number, precision = 6, isFormatted = false) {\n  if (!number) return 0;\n\n  const amountBigNumber = new BigNumber(number);\n  const amountString = amountBigNumber.toFixed().toString();\n  const indexOfDecimal = amountString.indexOf('.');\n  const roundedNumber = indexOfDecimal !== -1 ? amountString.slice(0, indexOfDecimal + (precision + 1)) : amountString;\n\n  return isFormatted ? displayFormattedNumber(roundedNumber, precision) : roundedNumber;\n}\n\nexport function displayFormattedNumber(number, precision = 0) {\n  if (!number) return 0;\n  if (number < 1) return +(+number).toFixed(6);\n\n  let formattedNumber = new BigNumber(number);\n  formattedNumber = formattedNumber.toFormat(precision);\n  const numberParts = formattedNumber.split('.');\n\n  if (numberParts.length === 2 && !+numberParts[1]) {\n    formattedNumber = numberParts[0];\n  }\n\n  return formattedNumber;\n}\n\nexport function toPercentage(number1, number2, precision = 2) {\n  return `${+roundNumber((number1 / number2) * 100, precision)}%`\n}\n\nexport function lowerCase(string) {\n  return string.toLowerCase()\n}\n\nexport function readableTime(seconds) {\n  if (seconds < 60) return seconds + \"s\"\n\n  const levels = [\n    [Math.floor(seconds / 31536000), 'years'],\n    [Math.floor((seconds % 31536000) / 86400), 'days'],\n    [Math.floor(((seconds % 31536000) % 86400) / 3600), 'h'],\n    [Math.floor((((seconds % 31536000) % 86400) % 3600) / 60), 'm'],\n  ];\n\n  let returntext = '';\n  for (let i = 0, max = levels.length; i < max; i++) {\n    if (levels[i][0] === 0) continue;\n    returntext += ' ' + levels[i][0] + '' + ((levels[i][0] === 1 && levels[i][1] > 1) ? levels[i][1].substr(0, levels[i][1].length - 1) : levels[i][1]);\n  }\n\n  return returntext.trim();\n}","import ENV from \"../configs/env\";\nimport Web3 from \"web3\";\nimport * as ethereumjs from 'ethereumjs-util'\nimport { toBigAmount, toGwei, toHex, toWei } from \"../utils/converters\";\nimport { getBiggestNumber } from \"src/utils/fortmaters\";\n\n\nconst web3 = new Web3(new Web3.providers.HttpProvider(ENV.NODE.URL, ENV.NODE.CONNECTION_TIMEOUT))\nconst l2Contract = new web3.eth.Contract(ENV.ABI.L2)\nconst erc20Contract = new web3.eth.Contract(ENV.ABI.ERC20)\n\nconst getTxObject = (contractAddress, methodData, address, value = \"0x0\", gasPrice = null, gas = null) => {\n    let txObject = {\n        from: address,\n        to: contractAddress,\n        value: value,\n        data: methodData\n    }\n    if (gasPrice !== null) txObject.gasPrice = toHex(toWei(gasPrice));\n    if (gas !== null) txObject.gas = toHex(gas);\n    return txObject\n}\n\nexport default {\n    getAccountID: (pubKey) => {\n      console.log(ENV.CONTRACTS.L2)\n        return new Promise((resolve, reject) => {\n          const data = l2Contract.methods.pubKeyToAccountData(pubKey).encodeABI();\n          web3.eth\n            .call({\n              to: ENV.CONTRACTS.L2,\n              data: data,\n            })\n            .then((result) => {\n              const idData = web3.eth.abi.decodeParameters([\"bool\", \"uint32\"], result)\n              resolve(parseInt(idData[1]));\n            })\n            .catch((err) => {\n              reject(err);\n            });\n        });\n    },\n    fetchTokenBalance: (address, tokenAddress) => {\n      let tokenContract = erc20Contract;\n      tokenContract.options.address = tokenAddress;\n      return new Promise((resolve, reject) => { \n        const data = tokenContract.methods.balanceOf(address).encodeABI();\n        web3.eth\n        .call({\n          to: tokenAddress,\n          data: data,\n        })\n        .then((result) => {\n          const tokenBalance = web3.eth.abi.decodeParameters([\"uint256\"], result);\n          resolve(tokenBalance[0]);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n      })\n\n    }, \n    fetchTokenAllowance: (address, tokenAddress, delegator = ENV.CONTRACTS.L2) => {\n        let tokenContract = erc20Contract;\n        tokenContract.options.address = tokenAddress;\n        const data = tokenContract.methods.allowance(address, delegator).encodeABI();\n        return new Promise((resolve, reject) => {\n          web3.eth.call({\n                to: tokenAddress,\n                data: data\n            }).then(result => {\n                const allowance = web3.eth.abi.decodeParameters(['uint256'], result);\n                resolve(allowance[0])\n            }).catch((err) => {\n                reject(err)\n            })\n        })\n    },\n    getDepositTxObject: (address, accountID, tokenAddress, amount, gasPrice = null, gas = null) => {\n        const data = l2Contract.methods.deposit(accountID, tokenAddress, toHex(toBigAmount(amount))).encodeABI();\n        let ethValue;\n        if (tokenAddress == ENV.TOKENS.ETH.address) {\n          ethValue = toHex(toBigAmount(amount));\n        }\n        return (gasPrice = null, gas = null) => getTxObject(ENV.CONTRACTS.L2, data, address, ethValue, gasPrice, gas)\n    },\n    getApproveTxObject: ( address, isApproveToMax = true, tokenAddress, delegator = ENV.CONTRACTS.L2) => {\n      const allowanceAmount = isApproveToMax ? getBiggestNumber() : 0;\n      const tokenContract = erc20Contract;\n      tokenContract.options.address = tokenAddress;\n  \n      const approveData = tokenContract.methods.approve(delegator, allowanceAmount).encodeABI();\n      return (gasPrice = null, gas = null) => getTxObject(tokenAddress, approveData, address, null, gasPrice, gas)\n    },\n    checkTxMined: async (txHash, topic = null) => {\n        const receipt = await web3.eth.getTransactionReceipt(txHash)\n        if (receipt !== null) {\n            if (!topic) {\n              return receipt.status;\n            }\n            const logs = receipt.logs;\n            const blockNumber = receipt.blockNumber;\n      \n            if (!blockNumber) {\n              return null;\n            }\n            if (!logs.length) {\n              return false;\n            }\n      \n            for (let i = 0; i < logs.length; ++i) {\n              if (logs[i].topics[0].toLowerCase() === topic.toLowerCase()) {\n                return true;\n              }\n            }\n        }\n        return null;\n    },\n    // makeTransaction: async (txObject, privateKey, devicePath) => {\n    //   try {\n    //       let txHash;\n    //       if (privateKey) {\n            \n    //         const signedTxObj = await signTransaction(txObject, privateKey);\n    //         txHash = await sendSignedTransaction(signedTxObj.rawTransaction);\n    //       } else if (devicePath) {\n    //         const signedRawTx = await signTransaction(txObject, devicePath);\n    //         txHash = await sendSignedTransaction(signedRawTx);\n    //       } else {\n    //         txHash = await sendTransaction(txObject);\n    //       }\n    //       return txHash;\n    //     } catch (error) {\n    //       return Promise.reject(error);\n    //     }\n    // },\n    estimateGas: async (txObject, type) => {\n      return await new Promise((resolve, reject) => {\n        web3.eth.estimateGas(txObject)\n        .then((result) => resolve(Math.round(result * 1.3)))\n        .catch((err) => {\n          reject(Math.round(ENV.DEFAULT_GAS[type] * 1.3))\n        })\n      })\n    },\n    getZkKeyPair:  async (ethSigner) => {\n      try { \n        const zkSigner = await window.zksync.Signer.fromETHSignature(ethSigner);\n        let privKeyBuffer = zkSigner.signer.privateKey;\n        let privKey = ethereumjs.bufferToHex(Array.from(privKeyBuffer))\n    \n        let pubKeyBuff = window.zksyncCrypto.private_key_to_pubkey(privKeyBuffer)\n        let publicKey = ethereumjs.bufferToHex(Array.from(pubKeyBuff))\n        return {zkPrivateKey: privKey, zkPublicKey: publicKey} \n      }\n      catch(e) {\n        alert(e)\n      }\n      return {}\n  } \n}","import { useState, useEffect } from 'react'\nexport default {\n    hook: (store) => () => {\n        const [x, setX] = useState(store.value)\n        useEffect(()=> {\n            const sub = store.subscribe({next: (v) => setX(v)})\n            return () => sub.unsubscribe()\n        }, [])\n        return x\n    }\n} ","import { BehaviorSubject } from 'rxjs';\nimport Web3Service from 'src/services/web3_service';\nimport rxBase from \"src/rx/rx-base\"\nconst init = () =>({\n    address: localStorage.getItem(\"address\"), \n    type: localStorage.getItem(\"type\"), \n    id: null, \n    privateKey: localStorage.getItem(\"privateKey\"),\n    zkPrivateKey: localStorage.getItem(\"zkPrivateKey\"), \n    zkPublicKey: localStorage.getItem(\"zkPublicKey\"),\n    wallet: null,\n    txHash: null \n}) \n\nconst store = new BehaviorSubject(init())\nexport default { \n    store: store, \n    useAccount: rxBase.hook(store),\n    import: ({address, type, privateKey, zkPrivateKey, zkPublicKey, wallet}) => {\n        store.next({...store.value, address, type, privateKey, zkPrivateKey, zkPublicKey, wallet}); \n        localStorage.setItem(\"address\", address);\n        localStorage.setItem(\"type\", type);\n        if (privateKey) localStorage.setItem(\"privateKey\", privateKey);\n        localStorage.setItem(\"zkPrivateKey\", zkPrivateKey);\n        localStorage.setItem(\"zkPublicKey\", zkPublicKey);\n    }, \n    clear: () => {\n        localStorage.removeItem(\"address\");\n        localStorage.removeItem(\"type\");\n        localStorage.removeItem(\"privateKey\");\n        localStorage.removeItem(\"zkPrivateKey\");\n        localStorage.removeItem(\"zkPublicKey\");\n        store.next(init())\n    },\n    getAccountID: async () => {\n        const accountID = await Web3Service.getAccountID(store.value.zkPublicKey)\n        store.next({...store.value, id: accountID })\n    },\n    setTxHash: (txHash) => {\n        store.next({...store.value, txHash })   \n    }\n}","import { BehaviorSubject } from \"rxjs\";\n\nconst init = {content: \"\"}\nconst store = new BehaviorSubject(init)\n\nexport default {\n    store: store, \n    show: (modalContent, onClose = () => {}) => {\n        store.next({content: modalContent, onClose})\n    } \n} ","import Modal from 'react-modal';\nimport {useState, useEffect} from 'react'\nimport modalService from '../../services/single_modal_service'\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\nexport default function() {\n  const [modal, setModal] = useState({content: \"\"})\n  useEffect(()=>{\n    modalService.store.subscribe({next: (v) => {setModal(v)} })\n  }, [])\n  return (\n    <Modal isOpen={modal.content != \"\"}\n            ariaHideApp={false}\n            style={customStyles}\n           onRequestClose={()=>{setModal({content: \"\"}); modal.onClose()}}>\n      {modal.content}\n    </Modal>)\n}","\nimport web3_service from \"src/services/web3_service\";\nimport { BehaviorSubject } from \"rxjs\"\nimport { formatBigNumber } from \"src/utils/fortmaters\";\nimport rxBase from \"src/rx/rx-base\"\nconst init = {\n    data: [{\n        address: \"0xc9b8548f0fdc231bdc08b74f5ac888677a15d620\", \n        decimals: 18,\n        balance: 0\n    }]\n}\n\nconst store = new BehaviorSubject(init)\nexport default {\n    store, \n    useCurrency: rxBase.hook(store),\n    fetchBalance: (address) => {\n        if (!address) return; \n        let currencies = store.value.data\n        for (let index in currencies) {\n            web3_service.fetchTokenBalance(address, currencies[index].address).then((balance)=>{\n                currencies[index].balance = +formatBigNumber(balance, currencies[index].decimals)\n                store.next({data: currencies})\n            })\n        }\n    }\n} ","import BigNumber from 'bignumber.js';\nimport { roundNumber } from \"src/utils/fortmaters\";\nimport { toGwei } from \"src/utils/converters\";\n\n/**\n * @returns number (0: equal, 1: greater, -1: less)\n */\nexport function compareTwoNumber(firstNumber, secondNumber) {\n  const firstBigNumber = new BigNumber(firstNumber);\n  const secondBigNumber = new BigNumber(secondNumber);\n\n  return firstBigNumber.comparedTo(secondBigNumber);\n}\n\nexport function multiplyOfTwoNumber(firstNumber, secondNumber) {\n  const firstBigNumber = new BigNumber(firstNumber);\n  const secondBigNumber = new BigNumber(secondNumber);\n\n  return firstBigNumber.multipliedBy(secondBigNumber).toString();\n}\n\nexport function divideTwoNumber(firstNumber, secondNumber) {\n  if (!+firstNumber || !+secondNumber) return 0;\n\n  const firstBigNumber = new BigNumber(firstNumber);\n  const secondBigNumber = new BigNumber(secondNumber);\n\n  return firstBigNumber.div(secondBigNumber).toString();\n}\n\nexport function calculatePercent(value, total) {\n  if (total === 0) return 100;\n  const result = divideTwoNumber(multiplyOfTwoNumber(value, 100), total);\n  return result > 100 ? 100 : result;\n}\n\nexport function calculateTxFee(gasPrice, gasLimit, precision = 7) {\n  return roundNumber(multiplyOfTwoNumber(toGwei(gasPrice), gasLimit), precision);\n}\n\nexport function calculateBrrOption(option) {\n  const options = option.split(\", \");\n  const totalValue = options.reduce((a, b) => parseInt(a) + parseInt(b), 0);\n  const firstValue = calculatePercent(options[0], totalValue);\n  const secondValue = calculatePercent(options[1], totalValue);\n  const thirdValue = calculatePercent(options[2], totalValue);\n\n  return `Burn ${roundNumber(firstValue, 2)}%; Reward ${roundNumber(thirdValue, 2)}%; Rebate ${roundNumber(secondValue, 2)}%`\n}\n\nexport function calculateFeeOption(option) {\n  return `${option / 100}%`;\n}\n\nexport function calculateTotalReward(rewards) {\n  let totalReward = 0;\n  if (rewards.length === 1) {\n    totalReward = rewards[0].amount;\n  } else if (rewards.length) {\n    totalReward = rewards.reduce((a, b) => a + b.amount, 0);\n  }\n\n  return totalReward;\n}\n","import { useState, useEffect } from 'react'\nimport web3Service from \"src/services/web3_service\";\nimport { calculateTxFee } from \"src/utils/calculators\";\n\nexport default ({txObject, type}) => {\n    const [gasPrice, setGasPrice] = useState(20);\n    const [gas, setGas] = useState(null);\n    const [txFee, setTxFee] = useState(null);\n    useEffect(() => {\n        async function fetchGasAndTxFee() {\n            const estimatedGasLimit = await web3Service.estimateGas(txObject, type)\n            const txFee = calculateTxFee(gasPrice, estimatedGasLimit);\n            setGasPrice(gasPrice);\n            setGas(estimatedGasLimit);\n            setTxFee(txFee);\n        } \n        fetchGasAndTxFee()\n    }, [])\n\n    return { gasPrice, gas, txFee}\n} ","\nimport {useState, useEffect} from 'react'\nimport rxAccount from '../../rx/rx-account';\nimport Web3Service from '../../services/web3_service'\nimport modalService from '../../services/single_modal_service'\nimport rxCurrency from 'src/rx/rx-currency';\nimport { toBigAmount } from \"src/utils/converters\";\nimport { compareTwoNumber } from \"src/utils/calculators\";\nimport useGasAndTxFee from '../hooks/useGasAndTxFee';\nimport ENV from 'src/configs/env';\nexport default function() {\n    // const [currency] = useState({address: \"0xc9b8548f0fdc231bdc08b74f5ac888677a15d620\", balance: 0});\n    const currency = rxCurrency.useCurrency().data[0]\n    const [amount, setAmount] = useState(0)\n    const account = rxAccount.useAccount()\n\n    const [flow, setFlow] = useState([])\n\n    async function deposit(){\n        const tokenAllowance = await Web3Service.fetchTokenAllowance(account.address, currency.address);\n        if (+tokenAllowance <= 0 ) { //start deposit immediatly\n            setFlow([\n                {component: ApproveModal, props: {currency, isApproveToMax: true}},\n                {component: BroadcastModal}, \n                {component: ConfirmModal, props: {amount, currency}}, \n                {component: BroadcastModal}, \n                {component: DoneModal, props: {}}\n            ])\n        }else if (compareTwoNumber(tokenAllowance, toBigAmount(amount)) === -1) {\n            setFlow([\n                {component: ApproveModal, props: {currency, isApproveToMax: false}},\n                {component: BroadcastModal}, \n                {component: ApproveModal, props: {currency, isApproveToMax: true}},\n                {component: BroadcastModal}, \n                {component: ConfirmModal, props: {amount, currency}}, \n                {component: BroadcastModal}, \n                {component: DoneModal, props: {}}\n            ])\n        }else {\n            setFlow([\n                {component: ConfirmModal, props: {amount, currency}}, \n                {component: BroadcastModal}, \n                {component: DoneModal, props: {}}\n            ])\n        }  \n    }\n\n    return(\n        <>\n            <input onChange={(e) => setAmount(e.target.value)}></input>\n            <button onClick={deposit}>Deposit</button>\n            balance: {currency.balance}\n            <StepWizard \n                flow={flow} \n                cancelFlow={() => {setFlow([])}}/>\n        </>\n    ) \n}\n\nconst StepWizard = ({flow, cancelFlow}) => {\n    const [step, setStep] = useState(0)\n    useEffect(() => {\n        if (flow.length == 0) { setStep(0) ; modalService.show(\"\"); return}\n        if (step >= flow.length) cancelFlow()\n        else {\n            const M = flow[step].component\n            modalService.show(<M nextStep={() => setStep(s => s + 1)} cancelFlow={cancelFlow} {...flow[step].props}/>, cancelFlow)\n        } \n    }, [step, flow])\n    return <></>\n}  \n\n\n\nconst ApproveModal = ({nextStep, cancelFlow, currency, isApproveToMax}) => {\n    const account = rxAccount.useAccount()\n    const getApproveTxObject = Web3Service.getApproveTxObject(account.address, isApproveToMax, currency.address);\n    const { gasPrice, gas } = useGasAndTxFee({txObject: getApproveTxObject(), type: ENV.STEPS.APPROVE}) \n    \n    const approve = async () => {\n        const txHash = await account.wallet.makeTransaction(getApproveTxObject(gasPrice, gas), account.privateKey, account.devicePath);\n        rxAccount.setTxHash(txHash)\n        nextStep()\n    }\n    return <div> approve to {isApproveToMax ? \"max\" : \"0\" } step <button onClick={approve}>next</button><button onClick={cancelFlow}>cancel</button></div>\n} \n\nconst ConfirmModal = ({nextStep, cancelFlow, amount, currency}) => {\n    const account = rxAccount.useAccount()\n    const getDepositTxObject = Web3Service.getDepositTxObject(account.address, account.id, currency.address, amount)\n    const { gasPrice, gas } = useGasAndTxFee({txObject: getDepositTxObject(), type: ENV.STEPS.DEPOSIT}) \n    async function deposit() {\n        const txHash = await account.wallet.makeTransaction(getDepositTxObject(gasPrice, gas), account.privateKey, account.devicePath);\n        rxAccount.setTxHash(txHash)\n        nextStep()\n    }\n    return <div> deposit step <button onClick={deposit}>next</button><button onClick={cancelFlow}>cancel</button></div>\n} \n\n\nconst BroadcastModal = ({nextStep, cancelFlow}) => {\n    const account = rxAccount.useAccount()\n    useEffect(() => {\n        const interval = setInterval(() => {\n            Web3Service.checkTxMined(account.txHash).then((isMined) => {\n                if (isMined !== null) {\n                    clearInterval(interval);\n                    if (isMined) {\n                      alert(\"mined\")\n                      return;\n                    }\n                    alert(\"error\")\n                }\n            })\n        }, 1000)\n        return () => clearInterval(interval)\n    }, [])\n    return <div> broadcast step \n        txhash:{account.txHash}<button onClick={nextStep}>next</button><button onClick={cancelFlow}>cancel</button></div>\n} \n\nconst DoneModal = ({nextStep, cancelFlow}) => {\n    return <div> done step  <button onClick={nextStep}>next</button><button onClick={cancelFlow}>cancel</button> </div>\n} ","import ENV from \"../configs/env\";\nimport Web3 from \"web3\";\nimport rxAccount from \"src/rx/rx-account\";\nimport Web3Service from 'src/services/web3_service'\nimport ethers from 'ethers'\nexport default (state = { ethereum: window.ethereum, web3: new Web3(window.ethereum || Web3.givenProvider || window.web3.currentProvider || window.web3.givenProvider)}) => {\n    \n    return {\n        connect: async (onEthereumError = null, onNetworkError = null) => {\n            if (!state.ethereum) {\n                if (typeof onEthereumError === \"function\") onEthereumError();\n                return false;\n            } \n    \n            const currentNetworkId = +state.ethereum.networkVersion\n            if (currentNetworkId !== ENV.NETWORK_ID ) {\n                if (typeof onNetworkError === \"function\") onNetworkError(currentNetworkId);\n                return false;\n            } \n            if (rxAccount.store.value.address) {\n                await state.ethereum.enable()\n                return  \n            }\n            \n            const accounts = await state.ethereum.enable()\n            const zkKeyPair = await Web3Service.getZkKeyPair(new ethers.providers.Web3Provider(state.ethereum).getSigner())\n            return { address : accounts[0], zkPrivateKey: zkKeyPair.zkPrivateKey, zkPublicKey: zkKeyPair.zkPublicKey, type: \"metamask\"}\n        }, \n        getDisconnected: (clearAccount) => {\n            if (state.ethereum) {\n                state.ethereum.on(\"accountsChanged\", (accounts) => {\n                    if (accounts[0] === rxAccount.store.value.address) return;\n                    clearAccount()\n                })\n                state.ethereum.on(\"chainChanged\", (networkId) => {\n                    if (+networkId === ENV.NETWORK_ID) return;\n                    console.log(\"chainChanged\")\n                    clearAccount();\n                })\n            }  \n        },\n        makeTransaction: async (txObject) => {\n            let txHash;\n            txHash = await new Promise((resolve, reject) => {\n              state.web3.eth.sendTransaction(txObject, function (err, txHash) {\n                if (!err) {\n                  resolve(txHash);\n                } else {\n                  reject(err.message);\n                }\n              });\n            });\n            return txHash\n        }\n    }\n}","import ENV from \"../configs/env\";\nimport Web3 from \"web3\";\nconst web3 = new Web3(new Web3.providers.HttpProvider(ENV.NODE.URL, ENV.NODE.CONNECTION_TIMEOUT));\nconst signTransaction = (txObject, privateKey) => {\n    return new Promise((resolve, reject) => {\n      web3.eth.accounts.signTransaction(txObject, privateKey, function (err, signedTxObj) {\n        if (!err) {\n          resolve(signedTxObj);\n        } else {\n          reject(err.message);\n        }\n      });\n    });\n  };\n\nconst sendSignedTransaction = (rawTx) => {\n    return new Promise((resolve, reject) => {\n      web3.eth.sendSignedTransaction(rawTx, function (err, txHash) {\n        if (!err) {\n          resolve(txHash);\n        } else {\n          reject(err.message);\n        }\n      });\n    });\n  };\nexport default (state = {}) => {\n    return {\n        makeTransaction: async (txObject, privateKey) => {\n            const signedTxObj = await signTransaction(txObject, privateKey);\n            let txHash = await sendSignedTransaction(signedTxObj.rawTransaction);\n            return txHash\n        } \n    }\n} ","import WalletConnect from \"walletconnect\";\nimport rxAccount from \"src/rx/rx-account\";\nexport default (state = {connectorSDK: new WalletConnect()}) => {\n    return {\n        connect: async (onEthereumError = null, onNetworkError = null) => {\n            const connector = await state.connectorSDK.connect()\n            if (rxAccount.store.value.address) return  \n            const zkKeyPair = {zkPrivateKey: \"0x03ebfd45eb18b5edba1e9dd0a66ae13aabc8cd89710982f88f51922a3b442d54\" , zkPublicKey: \"0x044baf7cfbdcf181234bfd270a184da4a98cd146a540a64439a1118fd63b2413\"}\n            return {address: connector.accounts[0], zkPrivateKey: zkKeyPair.zkPrivateKey, zkPublicKey: zkKeyPair.zkPublicKey, type: \"walletconnect\"}\n        },\n        makeTransaction: async (txObject) => {\n            let txHash\n            txHash = await state.connectorSDK.connector.sendTransaction(txObject)\n            return txHash\n        },\n        getDisconnected: (clearAccount) => {\n            state.connectorSDK.connector.on(\"disconnect\", () => {\n              this.handleClearAccount(clearAccount);\n            });\n        \n            state.connectorSDK.connector.on(\"session_update\", () => {\n              this.handleClearAccount(clearAccount);\n            });\n        }\n    } \n} ","import rxAccount from \"src/rx/rx-account\";\nimport { useEffect } from 'react'\nimport rxCurrency from \"src/rx/rx-currency\";\nimport metamaskWallet from \"src/services/metamask_wallet\"\nimport privateKeyWallet from \"src/services/private_key_wallet\"\nimport walletConnectWallet from \"src/services/wallet_connect_wallet\"\nexport default function useFetchingInitData() {\n    const account = rxAccount.useAccount()\n    useEffect(() => {\n        if (account.address) { \n            rxAccount.getAccountID()\n        }\n        const interval = setInterval(() => {\n            rxCurrency.fetchBalance(account.address)\n        }, 2000)\n        return () => clearInterval(interval)\n    }, [account.address])\n    useEffect(async () => {\n        let address = localStorage.getItem(\"address\");\n        let type = localStorage.getItem(\"type\");\n        if (address && type) connectWallet(type) \n    }, [])\n}\n\nconst connectWallet = async (type) => {\n    let address = localStorage.getItem(\"address\");\n    let privateKey = localStorage.getItem(\"privateKey\");\n    let zkPrivateKey = localStorage.getItem(\"zkPrivateKey\");\n    let zkPublicKey = localStorage.getItem(\"zkPublicKey\");\n    let wallet\n    if (type == \"metamask\") {\n        const metamask = metamaskWallet()\n        rxAccount.import({wallet: metamask, address, type, privateKey, zkPrivateKey, zkPublicKey});\n        metamask.connect(() => {alert(\"connect err\")}, () => {alert(\"network err\")});\n        metamask.getDisconnected(rxAccount.clear)\n    }else if (type == \"private\") {\n        rxAccount.import({wallet: privateKeyWallet(), address, type, privateKey, zkPrivateKey, zkPublicKey})\n    }else if (type == \"walletconnect\"){\n        const walletConnect = walletConnectWallet()\n        walletConnect.connect()\n        rxAccount.import({wallet: walletConnect, address, type, privateKey, zkPrivateKey, zkPublicKey})\n    }\n    return wallet\n} ","import metamaskWallet from \"src/services/metamask_wallet\"\nimport rxAccount from \"src/rx/rx-account\"\nexport default () => {\n    const connectMetamask = async () => {\n        const metamask = metamaskWallet()\n        const data = await metamask.connect(() => {alert(\"connect err\")}, () => {alert(\"network err\")});\n        rxAccount.import({address : data.address, zkPrivateKey: data.zkPrivateKey, zkPublicKey: data.zkPublicKey, type: \"metamask\", wallet: metamask})   \n        metamask.getDisconnected(rxAccount.clear)\n    } \n    return <button onClick={connectMetamask}> metamask </button>\n} ","import modalService from \"src/services/single_modal_service\";\nimport { validatePrivateKey, addressFromPrivateKey } from \"src/utils/keys\";\nimport {useState} from 'react'\nimport rxAccount from \"src/rx/rx-account\";\nimport ethers from \"ethers\" \nimport web3Service from \"src/services/web3_service\";\nimport privateKeyWallet from \"src/services/private_key_wallet\";\n\nconst PrivateKeyModal = () => {\n    const [priv, setPriv] = useState(\"\")\n    const submitKey = async (pKey) => {\n        const address = addressFromPrivateKey(pKey);\n        const zkKeyPair = await web3Service.getZkKeyPair(new ethers.Wallet(\"0x\" + pKey))\n        const wallet = privateKeyWallet()\n        rxAccount.import({address : address, zkPrivateKey: zkKeyPair.zkPrivateKey, zkPublicKey: zkKeyPair.zkPublicKey, type: \"private\", privateKey: pKey, wallet})   \n        modalService.show(\"\")\n    } \n    return (<><input placeholder={\"key\"} onChange={(e)=> setPriv(e.target.value) }></input>\n        <button onClick={() => submitKey(priv)}>submit</button></>)\n} \n\nexport default () => {\n    return  <button onClick={() => modalService.show(<PrivateKeyModal />)}>\n                private key\n            </button>\n}","import modalService from \"src/services/single_modal_service\";\nimport WalletConnect from \"walletconnect\";\nimport { useEffect } from \"react\";\nimport Web3Service from \"src/services/web3_service\";\nimport rxAccount from \"src/rx/rx-account\";\nimport ethers from \"ethers\";\nimport walletConnectWallet from \"src/services/wallet_connect_wallet\";\nwindow.ethers = ethers\n// const WalletConnectModal = () => {\n//     useEffect(() => {\n//         async function connect() {\n\n//             const wc = new WalletConnect();\n//             window.connector = await wc.connect();\n//             window.web3Provider = await wc.getWeb3Provider({\n//                 infuraId: \"aae8b1a2cb21490294c7ab5d5123d9f8\",\n//               });\n               \n//               window.channelProvider = await wc.getChannelProvider();\n//               window.eee = new providers.Web3Provider(window.web3Provider)\n               \n//             //   const starkwareProvider = await wc.getStarkwareProvider({\n//             //     contractAddress: \"<INSERT_CONTRACT_ADDRESS>\",\n//             //   });\n//             // console.log(\"asas\", connector)\n//             const zkKeyPair = await Web3Service.getZkKeyPair(window.eee.getSigner())\n//             console.log({address : window.connector.accounts[0], zkPrivateKey: zkKeyPair.zkPrivateKey, zkPublicKey: zkKeyPair.zkPublicKey, type: \"walletconnect\"})\n//             rxAccount.import({address : window.connector.accounts[0], zkPrivateKey: zkKeyPair.zkPrivateKey, zkPublicKey: zkKeyPair.zkPublicKey, type: \"walletconnect\"})   \n//         } \n//         connect()\n//     }, [])\n//     return <div>asdasdas</div>\n// } \n\n\nasync function connect() {\n    const walletConnect = walletConnectWallet()\n    const data = await walletConnect.connect()\n    rxAccount.import({address : data.address, zkPrivateKey: data.zkPrivateKey, zkPublicKey: data.zkPublicKey, type: \"walletconnect\", wallet: walletConnect})\n    walletConnect.getDisconnected(rxAccount.clear)\n} \n\nexport default () => {\n    return  <button onClick={connect}>\n                wallet connect\n            </button>\n}","import './App.css';\nimport rxAccount from 'src/rx/rx-account'\nimport ModalContainer from 'src/components/modals/modal_container';\n\nimport Deposit from 'src/components/deposit/deposit';\n\nimport { useEffect } from 'react'\nimport useFetchingInitData from './components/hooks/useFetchingInitData';\nimport rxCurrency from './rx/rx-currency';\nimport MetamaskButton from 'src/components/account/metamask_button'\nimport PrivateKeyButton from 'src/components/account/private_key_button'\nimport WalletConnectButton from 'src/components/account/wallet_connect_button'\nfunction App() {\n  const account = rxAccount.useAccount()\n  const currency = rxCurrency.useCurrency()\n  console.log(\"----\", account, currency)\n  useFetchingInitData()\n\n  useEffect(() => {\n    loadWasm();\n  }, [])\n  return (\n    <div className=\"App\">\n      {\n        !account.address ? (\n                            <>\n                              <MetamaskButton />\n                              <PrivateKeyButton />\n                              <WalletConnectButton />\n                            </>\n                          ) : (\n                            <>\n                              <button onClick={() => rxAccount.clear()}>\n                                clear account\n                              </button>\n\n                              Your address: {account.address}\n                              <Deposit />\n                            </>\n                          )\n      }\n      <ModalContainer />\n    </div>\n  );\n}\n\n\nasync function loadWasm() {\n  try {\n    const zksyncCrypto = await import('zksync-crypto');\n    const zksync = await import('zksync');\n    window.zksync = zksync\n    window.zksyncCrypto = zksyncCrypto\n    // genTestKeyPairs()\n  } catch(err) {\n    console.error(`Unexpected error in loadWasm. [Message: ${err.message}]`);\n  }\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}